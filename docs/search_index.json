[["index.html", "R 语言最佳实践 Chapter 1 前沿 1.1 帮助 help", " R 语言最佳实践 biomooc.com | version: 0.0.0-1 2022-01-07 Chapter 1 前沿 本书目标：总结R语言的最佳实践，特别是可视化方面，并付诸行动，持续提升技能、习惯和思维方式。 覆盖范围，文件摆放 编码习惯，代码结构 函数命名，函数结构，变量命名 并行执行 1.1 帮助 help 本文定位是中高级用户，熟手。 对于还没入门的，请参考入门读物 准备工作，阅读前两个章节。 https://www.biomooc.com/ 生物信息与R语言 QQ 群: 187923577 设置国内镜像来下载包 options(repos=structure(c(CRAN=“https://mirrors.tuna.tsinghua.edu.cn/CRAN/”))) 免费电子书 bookdown.org https://r-graphics.org/ https://r4ds.had.co.nz/ https://rafalab.github.io/dsbook/ https://www.tidytextmining.com/ https://otexts.com/fpp2/ sessionInfo() ## R version 4.1.1 (2021-08-10) ## Platform: x86_64-pc-linux-gnu (64-bit) ## Running under: Ubuntu 20.04.3 LTS ## ## Matrix products: default ## BLAS: /data/public/R-4.1.1/lib/R/lib/libRblas.so ## LAPACK: /data/public/R-4.1.1/lib/R/lib/libRlapack.so ## ## locale: ## [1] LC_CTYPE=en_US.UTF-8 LC_NUMERIC=C ## [3] LC_TIME=en_US.UTF-8 LC_COLLATE=en_US.UTF-8 ## [5] LC_MONETARY=en_US.UTF-8 LC_MESSAGES=en_US.UTF-8 ## [7] LC_PAPER=en_US.UTF-8 LC_NAME=C ## [9] LC_ADDRESS=C LC_TELEPHONE=C ## [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C ## ## attached base packages: ## [1] stats graphics grDevices utils datasets methods base ## ## loaded via a namespace (and not attached): ## [1] bookdown_0.24 digest_0.6.27 R6_2.5.1 jsonlite_1.7.2 ## [5] magrittr_2.0.1 evaluate_0.14 stringi_1.7.4 rlang_0.4.11 ## [9] rstudioapi_0.13 jquerylib_0.1.4 bslib_0.3.0 rmarkdown_2.11 ## [13] tools_4.1.1 stringr_1.4.0 xfun_0.26 yaml_2.2.1 ## [17] fastmap_1.1.0 compiler_4.1.1 htmltools_0.5.2 knitr_1.34 ## [21] sass_0.4.0 "],["intro.html", "Chapter 2 Introduction", " Chapter 2 Introduction You can label chapter and section titles using {#label} after them, e.g., we can reference Chapter 2. If you do not manually label them, there will be automatic labels anyway, e.g., Chapter ??. Figures and tables with captions will be placed in figure and table environments, respectively. par(mar = c(4, 4, .1, .1)) plot(pressure, type = &#39;b&#39;, pch = 19) Figure 2.1: Here is a nice figure! Reference a figure by its code chunk label with the fig: prefix, e.g., see Figure 2.1. Similarly, you can reference tables generated from knitr::kable(), e.g., see Table 2.1. knitr::kable( head(iris, 20), caption = &#39;Here is a nice table!&#39;, booktabs = TRUE ) Table 2.1: Here is a nice table! Sepal.Length Sepal.Width Petal.Length Petal.Width Species 5.1 3.5 1.4 0.2 setosa 4.9 3.0 1.4 0.2 setosa 4.7 3.2 1.3 0.2 setosa 4.6 3.1 1.5 0.2 setosa 5.0 3.6 1.4 0.2 setosa 5.4 3.9 1.7 0.4 setosa 4.6 3.4 1.4 0.3 setosa 5.0 3.4 1.5 0.2 setosa 4.4 2.9 1.4 0.2 setosa 4.9 3.1 1.5 0.1 setosa 5.4 3.7 1.5 0.2 setosa 4.8 3.4 1.6 0.2 setosa 4.8 3.0 1.4 0.1 setosa 4.3 3.0 1.1 0.1 setosa 5.8 4.0 1.2 0.2 setosa 5.7 4.4 1.5 0.4 setosa 5.4 3.9 1.3 0.4 setosa 5.1 3.5 1.4 0.3 setosa 5.7 3.8 1.7 0.3 setosa 5.1 3.8 1.5 0.3 setosa You can write citations, too. For example, we are using the bookdown package (Xie 2021) in this sample book, which was built on top of R Markdown and knitr (Xie 2015). References "],["literature2.html", "Chapter 3 Literature2 3.1 向高水平文章学习", " Chapter 3 Literature2 3.1 向高水平文章学习 整体使用了很多的包，对 library() 语句汇总计数后，排名靠前的包分别是: 某science文章中最高频率的R包，前3个频次超过40次。 ggpubr plyr data.table ggplot2 dplyr sscVis ssscClust reshape2 tictoc ComplexHeatmap cowplot ggrastr R.utils ggsci grid RcolorBrewer circlize Seurat Startrac stringr doParallel ... 还用到了 Gviz 包，可能是画基因峰图的。 3.1.1 按类别整理后如下 画图包 &quot;grid&quot;, https://stat.ethz.ch/R-manual/R-devel/library/grid/doc/index.html &quot;gridBase&quot;, 修饰ggplot2的低层包 &quot;ggplotify&quot;, [Good] Convert plot function call (using expression or formula) to &#39;grob&#39; or &#39;ggplot&#39; object that compatible to the &#39;grid&#39; and &#39;ggplot2&#39; ecosystem. https://www.jianshu.com/p/7a1050d54b31 gridExtra, &quot;ggplot2&quot;, &quot;ggpubr&quot;, [Good]‘ggplot2’ Based Publication Ready Plots https://rpkgs.datanovia.com/ggpubr/ &quot;cowplot&quot;, [Good] 为ggplot2提供一个出版级别的主题 https://www.jianshu.com/p/fea410378360 cowplot添加注释，连接图片 https://www.jianshu.com/p/0ec30fdffbd5 排版 https://www.jianshu.com/p/6400fd3abc56 &quot;ggrastr&quot;, [Good] 像素画点图，保持文字和标签向量化。大幅减少图片体积。 https://github.com/VPetukhov/ggrastr &quot;ggrepel&quot;, repel overlapping text labels &quot;ggvenn&quot;, 韦恩图 https://statisticsglobe.com/ggvenn-r-package &quot;VennDiagram&quot;, https://statisticsglobe.com/venn-diagram-in-r https://www.r-graph-gallery.com/venn-diagram.html https://www.geeksforgeeks.org/how-to-create-a-venn-diagram-in-r/ &quot;patchwork&quot;, [Good]make plot composition in R extremely simple and powerful. https://patchwork.data-imaginist.com/articles/patchwork.html &quot;ggforce&quot;, 注释和分面(椭圆圈住某些点) https://www.jianshu.com/p/9409650971d9 &quot;ggraph&quot;, A grammar of graphics for relational data Layouts https://www.data-imaginist.com/2017/ggraph-introduction-layouts/ https://www.r-bloggers.com/2017/02/introduction-to-ggraph-layouts/ https://ggraph.data-imaginist.com/reference/ggraph.html 所有可以转换为grob对象的图形都可以使用as.ggplot函数转换为ggplot对象 现在有了ggplot对象，我们可以利用cowplot或者patchwork包将所有的图形组合起来。 &quot;ComplexHeatmap&quot;, https://bioconductor.org/packages/release/bioc/html/ComplexHeatmap.html &quot;circlize&quot;, 一个圆形布局包含扇形(sector)和轨道(track)两个部分 https://www.sohu.com/a/351872019_718302 https://github.com/jokergoo/circlize https://jokergoo.github.io/circlize_book/book/ &quot;gplots&quot;, 用gplots包中的heatmap.2函数就可以画出想要的热图 &quot;igraph&quot;, provides versatile options for descriptive network analysis and visualization in R, Python, and C/C++ https://igraph.org/r/ &quot;png&quot;, &quot;fmsb&quot;, radar plot https://www.datanovia.com/en/blog/beautiful-radar-chart-in-r-using-fmsb-and-ggplot-packages/ 颜色 &quot;ggsci&quot;, offers a collection of ggplot2 color palettes inspired by scientific journals, data visualization libraries, science fiction movies, and TV shows. &quot;RColorBrewer&quot;, &quot;colorRamps&quot;, 数据框处理包 &quot;tidyverse&quot;, &quot;plyr&quot;, &quot;dplyr&quot;, &quot;data.table&quot;, 高效数据框 https://www.jianshu.com/p/01598d707ac4 &quot;reshape2&quot;, https://www.jianshu.com/p/370a04c6b64a 修整数据的内置函数（比如stack、unstack与reshape） &quot;Matrix&quot;, &quot;tibble&quot;, tibble()做的事情更少——这更加符合我们的需要：它从不改变输入数据的类型 https://www.jianshu.com/p/49e8a2d38389 &quot;zoo&quot;, Time Series 时间序列基础库 &quot;stringr&quot;, 一致的、简单易用的字符串工具集 http://blog.fens.me/r-stringr/ https://www.cnblogs.com/nxld/p/6062950.html &quot;magrittr&quot;, 该包定义了管道符 %&gt;% &quot;matrixStats&quot;, 矩阵 Functions that Apply to Rows and Columns of Matrices (and to Vectors) &quot;dendextend&quot;, 树状图 provides general functions for handling tree-like structures in R. [Good] https://mran.microsoft.com/snapshot/2016-10-12/web/packages/dendextend/vignettes/introduction.html meta 分析 &quot;meta&quot;, User-friendly general package providing standard methods for meta-analysis and supporting Schwarzer, Carpenter, and Rücker # w.step2.FigureS32.TCGA_mut_valid.R &quot;esc&quot;, esc: Effect Size Computation for Meta Analysis &quot;forestplot&quot;, 森林图 数学建模 &quot;ranger&quot;, 随机森林 a fast implementation of random forests (Breiman 2001) or recursive partitioning, particularly suited for high dimensional data. &quot;gam&quot;, Generalized Additive Models in R https://www.rdocumentation.org/packages/mgcv/versions/1.8-38/topics/gam &quot;MASS&quot;, 可以多元正态分布数据 https://cran.r-project.org/web/packages/MASS/MASS.pdf &quot;nlme&quot;, 混合线性模型 &quot;webr&quot;, Data and Functions for Web-Based Analysis https://github.com/cardiomoon/webr 生信专用包 &quot;limma&quot;, &quot;survival&quot;, &quot;survminer&quot;, &quot;Gviz&quot;, &quot;motifmatchr&quot;, &quot;Startrac&quot;, 通过Rna-seq和Tcr跟踪进行单T细胞分析 &quot;chromVARmotifs&quot;, make it easy to use several different motif collections in R, particularly for use with motifmatchr and chromVAR packages. 单细胞包(前几个是作者自己写的包，都在github上 https://github.com/Japrin/) &quot;sscVis&quot;, &quot;sscClust&quot;, &quot;scPip&quot;, A pipeline for scRNA-seq data analysis https://github.com/Japrin/scPip &quot;Seurat&quot;,&quot;sctransform&quot;, &quot;harmony&quot;, &quot;monocle3&quot;, &quot;SingleCellExperiment&quot;, &quot;SCENIC&quot;, &quot;scran&quot;, implements methods to perform low-level processing of scRNA-seq data, including cell cycle phase assignment, variance modelling and testing w.step0.10.TCGA_immuneTyping.R # &quot;scReClassify&quot;, a post hoc cell type classification of single-cell RNA-sequencing data to fine-tune cell type annotations generated by any cell type classification procedure. https://bioconductor.org/packages/devel/bioc/vignettes/scReClassify/inst/doc/scReClassify.html # wrapper.reClassify.R &quot;nichenetr&quot;, NicheNet: predict active ligand-target links between interacting cells &quot;SCopeLoomR&quot;, R package (compatible with SCope) to create generic .loom files and extend them with other data e.g.: SCENIC regulons, Seurat clusters and markers, ... https://github.com/aertslab/SCopeLoomR &quot;AUCell&quot;, http://events.jianshu.io/p/c15db7c9d3c5 GO分析与基因注释: &quot;clusterProfiler&quot;, &quot;org.Hs.eg.db&quot;, &quot;TxDb.Hsapiens.UCSC.hg19.knownGene&quot;, &quot;BSgenome.Hsapiens.UCSC.hg19&quot;, &quot;GSVA&quot;, R语言开发与调试 &quot;tictoc&quot;, Functions for Timing R Scripts, as Well as Implementations of Stack and List Structures &quot;R.utils&quot;, #使用 R.utils 中的 gunzip 解压缩 &quot;rlang&quot;, &quot;argparse&quot;, &quot;reticulate&quot;, &quot;future&quot;, 并行计算 &quot;parallel&quot;, https://stat.ethz.ch/R-manual/R-devel/library/parallel/doc/parallel.pdf &quot;doParallel&quot;, https://nceas.github.io/oss-lessons/parallel-computing-in-r/parallel-computing-in-r.html &quot;BiocParallel&quot;, https://www.r-bloggers.com/2016/03/are-you-doing-parallel-computations-in-r-then-use-biocparallel/ https://bioconductor.org/packages/release/bioc/vignettes/BiocParallel/inst/doc/Introduction_To_BiocParallel.pdf 查这个包在哪个函数出现过 $ find . | grep &quot;R$&quot; | xargs grep -P &quot;zoo&quot; --color=auto ./source_FigS22_func.R:library(&quot;zoo&quot;) ./source_dyn_func.R:library(&quot;zoo&quot;) $ find . | grep &quot;R$&quot; | xargs grep -P &quot;stringr&quot; --color=auto ./w.step2.FigureS17.CD8_ISG_mapping.R:library(&quot;stringr&quot;) ./w.step2.FigureS22.MAIT_Tex.R:library(&quot;stringr&quot;) ./w.step2.FigureS11.blood_Temra.R:library(&quot;stringr&quot;) $ find . | xargs grep -P &quot;gam&quot; | grep library --color=auto ./w.step2.FigureS17.CD8_ISG_highlight.Rmd:library(&quot;gam&quot;) ./w.step2.FigureS24.CD8_Tex_Dyn.Rmd:library(&quot;gam&quot;) ./w.step1.Figure3.CD4_Tfh_Dyn.Rmd:library(&quot;gam&quot;) ./w.step2.FigureS26.CD4_Treg_Dyn.Rmd:library(&quot;gam&quot;) $ find . | xargs grep -P &quot;ggrastr&quot; --color=auto ./w.step2.FigureS14.CD8_Tex_score.Rmd:library(&quot;ggrastr&quot;) ./w.step2.FigureS17.CD8_ISG_mapping.R:#library(&quot;ggrastr&quot;) ./w.step2.FigureS17.CD8_ISG_highlight.Rmd:library(&quot;ggrastr&quot;) ./w.step2.FigureS13.CD8_global_monocle3.Rmd:library(&quot;ggrastr&quot;) ./w.step2.FigureS25.CD4_Tfh_monocle3.Rmd:library(&quot;ggrastr&quot;) ./w.step2.FigureS26.CD4_Treg_monocle3.Rmd:library(&quot;ggrastr&quot;) ./scenic/run.scenic.step6.comb.R:library(&quot;ggrastr&quot;) ./w.step2.FigureS32.TCGA_mut_valid.R: library(&quot;ggrastr&quot;) ./w.step2.FigureS24.CD8_Tex_Dyn.Rmd:library(&quot;ggrastr&quot;) ./w.step0.04.proliferationScore.R:library(&quot;ggrastr&quot;) ./w.step2.FigureS22.MAIT_Tex.R:library(&quot;ggrastr&quot;) ./w.step1.Figure3.CD4_Tfh_Dyn.Rmd:library(&quot;ggrastr&quot;) ./w.step2.FigureS26.CD4_Treg_Dyn.Rmd:library(&quot;ggrastr&quot;) ./w.step2.FigureS11.blood_Temra.R:library(&quot;ggrastr&quot;) 找R包的官方主页，一般有文档 https://bioconductor.org/packages/release/bioc/html/BiocParallel.html "],["最佳实践.html", "Chapter 4 最佳实践 4.1 Best practices 4.2 文件结构 4.3 代码块 4.4 函数 4.5 图形操作", " Chapter 4 最佳实践 4.1 Best practices what are some tips for writing clean and efficient R code? Best practices: https://krlmlr.github.io/tidyprog/best-practices.html 写注释，写测试 谷歌的风格指导(多语言) https://google.github.io/styleguide/Rguide.html 函数命名使用 BigCamelCase，私有函数则加上 dot 前缀； dot.case 这种命名容易和S3类混淆，不建议使用； Don’t use attach() Right-hand assignment 不要用，容易看不到，且和其他主流语言不同； Use explicit returns，最后一句明写 return(x+y) http://adv-r.had.co.nz/Style.html variable names should be nouns and function names should be verbs. Use an underscore (_) to separate words within a name. Comments should explain the why, not the what. http://www.johnmyleswhite.com/notebook/2010/08/26/projecttemplate/ to automatically run all of the unit tests in your tests directory. run.tests() 学习最佳实践的包：stringr/testthat Best Practices for Writing R Code 使用 git https://swcarpentry.github.io/git-novice/ Be careful when using setwd()，只在开始用，或者不用。 函数单独写到一个文件中，然后引入 source(“my_genius_fxns.R”) 变量命名统一规则，比如 矩阵结尾 _mat，数据框结尾 _df Don’t repeat yourself– 当你开始复制好几行代码的时候，尝试写成循环or函数。否则未来极有可能犯错，代价昂贵。 一个项目的代码放到一个文件夹内，使用相对路径。 在某个文件中记录使用的包的版本号 keep track of sessionInfo() other hints: For efficiency, prefer vector operations over for loops. use a version control system, such as Git; Review and test your code rigorously Don’t save your workspace 4.2 文件结构 只能从代码结构中反推文件结构，比如代码放到哪里，数据放到哪里，输出放到哪里 (1) sce_all = readRDS(sprintf(&quot;%s/../../data/expression/CD8/integration/int.CD8.S35.sce.merged.rds&quot;,oDir)) sce_ref = readRDS(sprintf(&quot;%s/../../data/expression/CD8/integration/int.CD8.S35.HVG.continumOnly.v1.sce.Path.rds&quot;,oDir)) gene_used = read.table(sprintf(&quot;%s/../../data/metaInfo/int.CD8_Tex.genes.txt&quot;,oDir), header=F, stringsAsFactors=F)$V1 colSet = readRDS(sprintf(&quot;%s/../../data/metaInfo/panC.colSet.list.rds&quot;,oDir)) 推测 / /data/ |-metaInfo/ |-int.CD8_Tex.genes.txt |-panC.colSet.list.rds |-expression/ |-CD8 |-integration/ |-int.CD8.S35.sce.merged.rds |-int.CD8.S35.HVG.continumOnly.v1.sce.Path.rds |-xx/ |-yy/ |-OUT_FigS17/ just created |- #here now 4.3 代码块 对于不常用，但是是一起执行的代码，使用{}括起来，整体只需要按一下ctrl+enter即可全部执行，清晰高效。 { a=1 b=2 print(a+b) } 4.4 函数 4.4.1 函数命名的规范化 对于使用超过2次的代码块，包装成函数，放到专门的文件中，供其他脚本source()引用。 $ ls -lth | grep -i func -r--r--r-- 1 wangjl wangjl 9.7K Nov 23 11:34 source_dyn_func.R -r--r--r-- 1 wangjl wangjl 7.3K Nov 5 00:32 source_FigS22_func.R -r--r--r-- 1 wangjl wangjl 84K Sep 30 14:45 func.R 查看一下函数名字，函数名字加点号，中间的单词使用首字母大写。 $ grep -i &quot;function&quot; func.R changeSomeNames &lt;- function(obj,col.mcls=&quot;meta.cluster&quot;,col.ctype=&quot;cancerType&quot;,col.dataset=&quot;dataset&quot;) correctCellInfo &lt;- function(cellInfo.tb) plotNightingaleRose &lt;- function(dat.plot.NightingaleRose,empty_bar=2, do.tissueDist &lt;- function(cellInfo.tb,out.prefix,pdf.width=3,pdf.height=5,verbose=0) test.dist.table &lt;- function(count.dist,min.rowSum=0) count.dist.melt.ext.tb &lt;- as.data.table(ldply(seq_len(nrow(count.dist.melt.tb)), function(i){ fetchMetaClusterID2CusterFullName &lt;- function(col.use=&quot;cluster.name.full&quot;) 计算分裂指数 calProliferationScore &lt;- function(obj,assay.name,gene.prol,out.prefix=NULL,method=&quot;mean&quot;) f.zero &lt;- apply(exp.sub,1,function(x){ all(x==0) }) f.zero &lt;- apply(exp.sub,1,function(x){ all(x==0) }) vis.clonotype &lt;- function(out.prefix, annotation_legend_param &lt;- llply(mcls.sig,function(x){ list(at=sig.pretty) }) annotation_legend_param_prob &lt;- llply(mcls.sig,function(x){ colSet.prob &lt;- llply(mcls.sig,function(x){ ana.clonotypeAcrossMcls.moreThanTwo &lt;- function(object, clone.LLR.tb &lt;- ldply(seq_len(nrow(clone.info.flt.tb)),function(i){ do.plot.bar &lt;- function(dat.block.flt.freq,clone.info.flt.tb, l_ply(seq_along(clone.example.vec),function(i){ makeFig.ExampleGeneBarplot &lt;- function(out.prefix,gene.to.plot, prepare.data.for.plot &lt;- function(dat.long,gene.desc.top,mcls,a.gene,mod.sort=3) dat.fig.list &lt;- llply(gene.to.plot,function(a.gene){ run.clusterProfiler &lt;- function(out.prefix, gene.oi, gene.bg, do.plot.freq.heatmap &lt;- function(dat.plot.a,colSet,mapping.vec,group.var=&quot;meta.cluster&quot;, mcls.cor.max &lt;- apply(cor.dat,1,function(x){ max(abs(x[x!=1])) }) makeHTPlot &lt;- function(dat.in,out.prefix) sigGeneVennPlot &lt;- function(v.list,background.list,out.prefix,col.venn=NULL,fill.venn=NULL,venn.alpha=c(1,0.7,0.7)) sigGeneVennTable &lt;- function(gene.tb,cmp,only.sig=T) function(x){ any(x==T,na.rm=T) }) run.nichenet &lt;- function(gene.oi,gene.bg,out.prefix, function(x){ mean(x,na.rm=T) &gt;= 0.5 }) run.venn.nicheNet.g2 &lt;- function(mcls,sname,out.prefix,gene.bg,...) gen.gsea.script &lt;- function(gene.desc.top,sh.dir,out.prefix,db.file, 函数的参数，使用点号前缀，目的是？为了防止重复？只有函数内部使用点号开头的变量。 $ grep -i &quot;function&quot; source_dyn_func.R heatmap_sm = function (obj, assay.name = &quot;exprs&quot;, out.prefix = NULL, ncell.downsample = NULL, dat.plot = t(apply(dat.plot, 1, function(x){rollmean(x, 50, fill=&quot;extend&quot;)})) ## 2. new functions convertGeneID = function(.genes, .from=&quot;SYMBOL&quot;, .to=&quot;ENSEMBL&quot;){ convertDPTperc = function(.sce){ testOneGene = function(.gene, .sce){ testProcess = function(.sce, .tfs){ plotONEgene = function(.gene, .sce, .colSet){ hyper.test = function(set1, set2, bg){ 4.4.2 没见过或使用较少的函数 (1) sprintf() #好处是和C一致，减少记忆负担。 (2) 开头引入包后，定义文件夹 stype = &quot;CD8&quot; oDir = &quot;./OUT_FigS17/&quot; dir.create(oDir, F, T) # dir.create(path, showWarnings = TRUE, recursive = FALSE, mode = &quot;0777&quot;) (3) ggsave, 及其参数 useDingbats=F(方便后期AI处理图片) print(p) #要打出来图才能保存 ggsave(p, file=sprintf(&quot;%s/%s_ISG.mapping.umap.pdf&quot;,oDir, stype), width=5.5, height=8, useDingbats=F) 4.5 图形操作 用到了很多 ggpubr 包 用到了 ggplot2 图形基本操作。 画热图，用到了 ComplexHeatmap 包，并用 grid 做参数整合。 对 seurat 掰开揉碎了，写到自己的包里了。 "],["applications.html", "Chapter 5 Applications 5.1 图片瘦身(ggrastr) 5.2 为paper配色而生(ggsci包) 5.3 图片布局(grid, gridExtra) 5.4 拼接图形(gridExtra/ cowplot/ patchwork) 5.5 ggExtra 画边缘分布 5.6 相关分析(去掉共线性的变量)", " Chapter 5 Applications Some significant applications are demonstrated in this chapter. 5.1 图片瘦身(ggrastr) ggrastr: Rasterize Layers for ‘ggplot2’ 作用: 生成栅格图、矢量文字。 生成pdf的时候，图片瘦身效果明显，1.4M 栅格化后只有200k。 library(ggrastr) library(ggplot2) #pdf(&quot;my_output/test1.pdf&quot;, width=4, height=3) ggplot(diamonds, aes(carat, price, color=cut))+ #geom_point(size=0.1)+ geom_point_rast(size=0.1, raster.dpi = getOption(&quot;ggrastr.default.dpi&quot;, 300),)+ #图片瘦身：点图不是是矢量，文字是 theme_classic()+ guides(color = guide_legend(override.aes = list(size = 3))) #dev.off() 5.2 为paper配色而生(ggsci包) 包含各种sci-fi主题的调色盘！ scale_color_palname() scale_fill_palname() 就包含了 nature, Lancet, NEJM，JAMA,JCO等顶级杂志的配色风格 library(ggplot2) library(dplyr) library(ggsci) library(gridExtra) p1 = ggplot(subset(diamonds, carat &gt;= 2.2), aes(x = table, y = price, colour = cut) )+ geom_point(alpha = 0.7) + geom_smooth(method = &quot;loess&quot;, alpha = 0.05, size = 1, span = 1) + theme_bw() p2 = ggplot(subset(diamonds, carat &gt; 2.2 &amp; depth &gt; 55 &amp; depth &lt; 70), aes(x = depth, fill = cut)) + geom_histogram(colour = &quot;#00112200&quot;, binwidth = 1, position = &quot;dodge&quot;) + theme_bw() # NPG配色 p1_npg = p1 + scale_color_npg() p2_npg = p2 + scale_fill_npg() grid.arrange(p1_npg, p2_npg, ncol = 2)##grid组图 # 新英格兰医学杂志配色 grid.arrange(p1 + scale_color_nejm(), p2 + scale_fill_nejm(), ncol = 2) # 柳叶刀杂志配色 scale_color_lancet(), scale_fill_lancet(), # JAMA配色 scale_color_jama(), scale_fill_jama(), set.seed(202201) p1=diamonds %&gt;% sample_n(1000) %&gt;% ggplot()+ aes(x=cut,y=price,fill=cut) + geom_boxplot()+ theme_classic() p1+scale_fill_lancet() # 动画主题 p1+scale_fill_rickandmorty() 5.2.1 获取颜色16进制值 nejm&lt;-pal_nejm(&quot;default&quot;,alpha = 1)(8)##(9表示呈现多少个颜色) nejm ## [1] &quot;#BC3C29FF&quot; &quot;#0072B5FF&quot; &quot;#E18727FF&quot; &quot;#20854EFF&quot; &quot;#7876B1FF&quot; &quot;#6F99ADFF&quot; ## [7] &quot;#FFDC91FF&quot; &quot;#EE4C97FF&quot; library(scales) scales::show_col(nejm, cex_label = 0.8 ) #scales::show_col( ggsci::rgb_material(&quot;red&quot;), cex_label = 0.6 ) #scales::show_col( ggsci::rgb_material(&quot;blue&quot;), cex_label = 0.6 ) scales::show_col( ggsci::rgb_material(&quot;purple&quot;), cex_label = 0.6 ) 5.3 图片布局(grid, gridExtra) 在grid包中，grob是一个可编辑的绘图对象，grob是graphical object两个单词的前两个字符的组合。常用于表示ggplot对象、lattice等高级图形系统创建图形对象。 grid.arrange()函数，不仅能够控制个数已知的图形布局，还能对控制未知个数的图形布局，功能十分强大。 arrangeGrob()和grid.arrange()函数 这两个布局函数的区别是：arrangeGrob()返回未绘制的grob，而grid.arrange()函数在当前的设备上绘图图形。 library(grid) library(gridExtra) library(ggplot2) # 创建对象 g1=ggplot(mtcars, aes(disp, mpg))+geom_point()+theme_classic();g1 g2=ggplot(iris, aes(Species, Sepal.Length, fill=Species))+ geom_violin()+theme_classic()+labs(x=&quot;&quot;)+ theme( axis.text.x = element_text(angle=60, hjust = 1), legend.position = &quot;none&quot;);g2 # (1) 两列 grid.arrange(g1, circleGrob(), rectGrob(width=0.8, height=0.5), g2, ncol = 2) # (2) 控制每行每列的宽高比例 grid.arrange(g1, g2, circleGrob(), rectGrob(width=0.9), ncol=2, nrow=2, widths=c(3,5), heights=c(4,1)) # (3) 绘图对象合并为一个list参数传入 gs=list() gs[[1]]=g1 gs[[2]]=g2 # gs grid.arrange(grobs=gs,ncol = 2) # (4) 使用 rbind.gtable 合并后再画图 gA &lt;- ggplotGrob(g1) gB &lt;- ggplotGrob(g2) grid::grid.newpage() grid::grid.draw(rbind(gA, gB)) 5.3.1 更精细控制布局:使用 layout_matrix=矩阵 # 共三列，1/3, 2/3 grid.arrange(g1, g2, layout_matrix = matrix(c(1, 2, 2), ncol = 3)) # 还可以留空白 grid.arrange(g1, g2, layout_matrix = matrix(c(1, NA, NA, NA, 2, 2), byrow = TRUE, ncol = 3)) # 更复杂的布局 lay &lt;- rbind(c(1,1,1,2,3), c(1,1,1,4,5), c(6,7,8,9,9)) grid.arrange(grobs = gs, layout_matrix = lay) 5.3.2 图中图 # 把 ggplot2 对象转变为 grob 对象 g2_2=ggplot2::ggplotGrob(g2) grid.draw(g2_2) # 通过添加注释(annotate)的方式，向一个图形内部添加一个小图形 #参数解释 # xmin、xmax、ymin、ymax # 添加图形在大图中的四个点的坐标 # grob # 要添加的小图对象 grid.newpage() g1 + annotation_custom(grob = g2_2, xmin = 250, xmax = 450, ymin = 20, ymax = 35) 5.4 拼接图形(gridExtra/ cowplot/ patchwork) 创建带边缘分布的散点图，边缘分布图和中间的主图坐标怎么对齐呢？ - 可以尝试 cowplot 包的 plot_grid 函数的 align 函数实现坐标对齐。 - 或者 patchwork 包的 plot_layout 函数。 library(RColorBrewer) # 模拟数据 set.seed(202201) df1 &lt;- data.frame(x=c(rnorm(1000, mean=1),rnorm(3000, mean=4.5)), y=c(rnorm(3000, mean=-1.6),rnorm(1000, mean=2.2)) ) # 二维分布云图 p1&lt;-ggplot(df1, aes(x, y)) + #geom_hex(bins = 40,na.rm=TRUE)+ #填充单元形状设定为六边形 geom_bin2d (bins=40,na.rm=TRUE) + #填充单元形状设定为正方形 scale_fill_gradientn(colours=rev(brewer.pal(11,&#39;Spectral&#39;)))+ theme_classic() p1 # 二维分布密度图 p2&lt;-ggplot(df1, aes(x, y)) + stat_density_2d (geom =&quot;raster&quot;,aes(fill = ..density..),contour = F)+ #栅格形填充 # stat_density_2d (geom =&quot;polygon&quot;,aes(fill = ..level..),bins=30 )+ #多边形填充 scale_fill_gradientn(colours= rev(brewer.pal(11,&#39;Spectral&#39;)))+ theme_classic() p2 # 效果1: 二维分布云图+边缘直方图 #建立空白图形面板 empty&lt;-ggplot()+ theme(panel.background = element_rect(fill=&quot;white&quot;, color=&quot;white&quot;)) # 绘制顶部直方图 hist_top &lt;- ggplot(df1, aes(x)) + geom_histogram(colour=&quot;black&quot;,fill=&#39;#5E4FA2&#39;,size=0.25)+ theme_void() # 绘制右边的直方图 hist_right &lt;- ggplot(df1, aes(y)) + geom_histogram(colour=&quot;black&quot;,fill=&#39;#5E4FA2&#39;,size=0.25)+ theme_void()+ coord_flip() #旋转坐标轴 #绘制云图 scatter&lt;-ggplot(df1, aes(x, y)) + #stat_density2d(geom =&quot;polygon&quot;,aes(fill = ..level..),bins=30 )+ stat_binhex(bins = 15,na.rm=TRUE,color=&quot;black&quot;)+# scale_fill_gradientn(colours=rev(brewer.pal(11,&#39;Spectral&#39;)))+ theme_minimal()+theme( legend.position = &quot;none&quot; ) # 最终的组合 grid.newpage() grid.arrange(hist_top, empty, p1+theme( legend.position = &quot;none&quot;), hist_right, ncol=2, nrow=2, widths=c(4,1), heights=c(1,4)) # grid.arrange(hist_top, empty, scatter, hist_right, ncol=2, nrow=2, widths=c(4,1), heights=c(1,4)) # 或者先返回对象，再画出来 p5=arrangeGrob(hist_top, empty, scatter, hist_right, ncol=2, nrow=2, widths=c(4,1), heights=c(1,4)) p5 ## TableGrob (2 x 2) &quot;arrange&quot;: 4 grobs ## z cells name grob ## 1 1 (1-1,1-1) arrange gtable[layout] ## 2 2 (1-1,2-2) arrange gtable[layout] ## 3 3 (2-2,1-1) arrange gtable[layout] ## 4 4 (2-2,2-2) arrange gtable[layout] grid.draw(p5) # 效果2: 二维密度云图+边缘密度图 # 绘制顶部直方图 hist_top &lt;- ggplot(df1, aes(x)) + geom_density(colour=&quot;black&quot;,fill=&#39;#5E4FA2&#39;,size=0.25)+ theme_void() # 绘制右边的直方图 hist_right &lt;- ggplot(df1, aes(y)) + geom_density(colour=&quot;black&quot;,fill=&#39;#5E4FA2&#39;,size=0.25)+ theme_void()+ coord_flip() #绘制云图 scatter&lt;-ggplot(df1, aes(x, y)) + #stat_density2d(geom =&quot;polygon&quot;,aes(fill = ..level..),bins=30 )+ stat_density2d(geom =&quot;raster&quot;,aes(fill = ..density..),bins = 15,na.rm=TRUE,contour = F,alpha=1)+# scale_fill_gradientn(colours=rev(brewer.pal(11,&#39;Spectral&#39;)))+ theme_minimal()+ theme(panel.background=element_rect(fill=&quot;white&quot;,colour=&quot;black&quot;,size=0.25), legend.position = &quot;none&quot; ) # 最终的组合 grid.arrange(hist_top, empty, scatter, hist_right, ncol=2, nrow=2, widths=c(4,1), heights=c(1,4)) 5.4.1 cowplot 拼接图 library(cowplot) plot_grid(hist_top, empty, p1+theme( legend.position = &quot;none&quot;), hist_right, ncol = 2, #labels = &quot;XX&quot;, hjust = -0.5, vjust = 1, align = &quot;hv&quot;, # h 和 v 方向都对齐 #scale = 1, rel_widths = c(4, 1), rel_heights = c(1, 4)) 5.4.2 patchwork 拼接图 library(patchwork) hist_top + plot_spacer() + # patchwork的函数，自动添加一个空白块 (p1+theme( legend.position = &quot;none&quot;)) + hist_right + plot_layout( ncol = 2, nrow = 2, widths = c(4, 1), heights = c(1, 4) ) 5.5 ggExtra 画边缘分布 # https://www.r-graph-gallery.com/277-marginal-histogram-for-ggplot2 # https://github.com/daattali/ggExtra p0&lt;-ggplot(df1, aes(x, y)) + geom_point(color=&quot;slateblue&quot;, alpha=0.2, size=0.2)+ scale_fill_gradientn(colours=rev(brewer.pal(11,&#39;Spectral&#39;)))+ theme_classic() # p0 library(ggExtra) ggMarginal( (p0+theme( legend.position = &quot;none&quot;)), type=&quot;boxplot&quot;, fill = &quot;slateblue&quot;) grid.newpage() ggMarginal( (p0+theme( legend.position = &quot;none&quot;)), type=&quot;density&quot;, fill = &quot;slateblue&quot;) grid.newpage() ggMarginal( (p0+theme( legend.position = &quot;none&quot;)), type=&quot;histogram&quot;, fill = &quot;slateblue&quot;) grid.newpage() ggMarginal( (p0+theme( legend.position = &quot;none&quot;)), type=&quot;histogram&quot;, fill = &quot;slateblue&quot;, xparams = list( bins=10)) 5.6 相关分析(去掉共线性的变量) # Finding highly correlated variables library(corrplot) M=cor(na.omit(mtcars)) corrplot(M, method = &quot;circle&quot;, type = &quot;lower&quot;, tl.srt = 45, tl.col = &quot;black&quot;, tl.cex = 0.75) "],["final-words.html", "Chapter 6 Final Words", " Chapter 6 Final Words We have finished a nice book. "],["references.html", "References", " References "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
